apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "backend"
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "backend"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "backend"
    spec:
      automountServiceAccountToken: false
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: {{ .Values.service.port.name }}
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          #          livenessProbe:
          #            httpGet:
          #              path: /livez
          #              port: {{ .Values.service.port.name }}
          #          readinessProbe:
          #            httpGet:
          #              path: /readyz
          #              port: {{ .Values.service.port.name }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: APP_PORT
              value: {{ .Values.config.port | quote }}
